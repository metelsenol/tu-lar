#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>  

int main() {
    char keyPressed;
    int distance = 0;
    int targetPosition = 30;  // İlk hedefin pozisyonu
    int score = 0;

    printf("       𝗠𝗘𝗧𝗘 𝗟𝗨𝗞𝗘 𝗦𝗨𝗡𝗔𝗥\n"); 
    printf("\n(Devam etmek için Enter'a basın)\n");   
    getchar();   

    // Clear the console 
    #ifdef _WIN32 
        system("cls"); // For Windows 
    #else 
        system("clear"); // For Unix-like systems 
    #endif 

    printf("✩░▒▓▆▅▃▂▁𝐓𝐔Ş𝐋𝐀𝐑▁▂▃▅▆▓▒░✩");
    printf("\n\n(Devam etmek için Enter'a basın)\n");

    getchar();

    // Clear the console 
    #ifdef _WIN32 
        system("cls"); // For Windows 
    #else 
        system("clear"); // For Unix-like systems 
    #endif 
   

    printf("_/﹋\\_\n(҂_´)\n<,   ,>                                 🞖\n_/﹋\\_\n\nBaşlamak için bir tuşa basın:\n\n(Bastığınız tuş sizin merminizi belirler)");

    keyPressed = getchar();  
    getchar();               

    #ifdef _WIN32
        system("cls"); 
    #else
        system("clear");  
    #endif

    while (1) {

        // Sabit hedefin olduğu konumu her zaman ekrana çiz
        for (distance = 0; distance <= targetPosition; distance++) {

            #ifdef _WIN32
                system("cls");  
            #else
                system("clear");  
            #endif

            // Hedefin ve silahın ASCII art'ını çiz
            printf("_/﹋\\_\n(҂_´)\n<,︻╦╤─ ");  

            // Ateş etme animasyonu (mermi hareketi)
            for (int i = 0; i < distance; i++) {
                printf(" ");  
            }

            // Ateş edilen mermi göster
            printf("%c", keyPressed);  

            // Hedef sembolünü her zaman aynı yerde göster
            for (int i = distance; i < targetPosition; i++) {
                printf(" ");  // Mermiden sonra boşluk bırak
            }
            printf(" 🞖\n");  // Hedef sembolü her zaman görünür ve sabit yerinde

            // Puan her zaman ekranda görünsün
            usleep(100000); 
        }

        // Hedefi vurduğunda puanı arttır
        score += 10;

        // Tekrar ateş etmek için bir tuşa basın mesajını ve güncellenmiş puanı aynı anda göster
        printf("\nPuan: %d\n", score);
        printf("Tekrar ateş etmek için bir tuşa basın (Çıkmak için 'q'): ");

        keyPressed = getchar();
        getchar();  

        // Eğer 'q' tuşuna basılırsa çık
        if (keyPressed == 'q') {
            printf("\nÇıkış yapılıyor...\n");
            break;
        }
    }

    // Oyun bittiğinde final puanı
    printf("Son Puanınız: %d\n", score);
    return 0;
}
